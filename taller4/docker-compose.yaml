version: '3.8'

services:
  # Base de Datos para metadata de MLflow (en lugar de SQLite)
  postgres_db:
    image: postgres:13
    container_name: postgres_db
    environment:
      - POSTGRES_USER=mlflow_user
      - POSTGRES_PASSWORD=mlflow_pass
      - POSTGRES_DB=mlflow_db
    ports:
      - "5432:5432" # Exponer para conectar desde el notebook si es necesario
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mlflow_user"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Almacén de artefactos (modelos, gráficos, etc.)
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Consola web
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=supersecret
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
        interval: 30s
        timeout: 20s
        retries: 3

  # Servidor de Tracking de MLflow
  mlflow_server:
    build:
      context: ./mlflow
    container_name: mlflow_server
    ports:
      - "5000:5000"
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=supersecret
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
    command: >
      mlflow server
      --backend-store-uri postgresql://mlflow_user:mlflow_pass@postgres_db:5432/mlflow_db
      --default-artifact-root s3://mlflow/
      --host 0.0.0.0
      --serve-artifacts
    depends_on:
      postgres_db:
        condition: service_healthy
      minio:
        condition: service_healthy

volumes:
  postgres_data:
  minio_data:
