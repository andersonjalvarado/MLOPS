# Configuración del modelo
model:
  type: "logistic"  # Opciones: logistic, random_forest, svm
  
  # Qué características usar - Separamos numéricas de categóricas
  features:
    numeric:
      - "bill_length_mm"      # Longitud del pico
      - "bill_depth_mm"       # Profundidad del pico  
      - "flipper_length_mm"   # Longitud de la aleta
      - "body_mass_g"         # Masa corporal
      - "bill_ratio"          # Característica engineered: ratio del pico
    categorical:
      - "island"              # Isla donde vive el pingüino
      - "sex"                 # Sexo del pingüino

# Configuración para optimización de hiperparámetros
hyperparameter_tuning:
  enabled: true  # Cambiar a false para entrenamiento rápido
  cv_folds: 5    # Validación cruzada de 5 pliegues
  
  # Parámetros específicos para regresión logística
  logistic_params:
    C: [0.1, 1.0, 10.0]             # Regularización - más bajo = más regularización
    penalty: ["l1", "l2"]           # Tipo de regularización
    solver: ["liblinear", "saga"]   # Algoritmo de optimización
  
  # Parámetros específicos para Random Forest
  random_forest_params:
    n_estimators: [50, 100, 150]        # Número de árboles
    max_depth: [5, 10, 15, null]        # Profundidad máxima (null = sin límite)
    min_samples_split: [2, 5, 10]       # Mínimo de muestras para dividir un nodo
    min_samples_leaf: [1, 2, 4]         # Mínimo de muestras en hojas
    max_features: ["sqrt", "log2"]      # Características a considerar en cada división

  
  # Parámetros específicos para SVM
  svm_params:
    C: [0.1, 1.0, 10.0, 100.0]                       # Parámetro de regularización
    kernel: ["rbf", "poly", "linear"]                # Tipo de kernel
    gamma: ["scale", "auto", 0.001, 0.01, 0.1, 1.0]  # Parámetro del kernel
    degree: [2, 3, 4]                                # Grado del kernel polinomial (solo si kernel="poly")  

# Configuración de datos
data:
  test_size: 0.2        # 20% para prueba
  random_state: 42      # Semilla para reproducibilidad
  stratify: true        # Mantener proporciones de clases

# Configuración de salida
output:
  model_dir: "models"
  log_dir: "logs"
  save_metadata: true   # Guardar información del entrenamiento